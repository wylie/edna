// Buttons
// 
// Let's assume that you know what a button is...
// 
// Styleguide 2

// Basic Button
// 
// Markup:
// <button class="btn {{modifier_class}}">Button</button>
// 
// .search               - Used in search pattern
// .primary              - Primary button choice
// .cancel              - Cancel button choice
// .disabled             - Disabled input state
// 
// Styleguide 2.1

.btn {
	.fz(1.9);

	@btn-height: 40px;
	@color: #333;

	& + & {
		.ml(10px);
	}

	.h(@btn-height);
	.p(0 21px);
	.bdw(1);
	.bds;
	.bgc(@btn-bg);
	.bdc(@btn-border);
	.cur(p);
	.bdrs;
	&:hover {
		.bgc(@btn-bg-hover);
		.bdc(@btn-border-hover);
	}

	// button variations
	@list: action, cancel, disabled, primary, search, select;
	.loop(@arrayLength, @index: 1) when (@index =< @arrayLength) {
		@classVal: extract(@list, @index);

		// action buttons!
		& when (@classVal = action) {
			&.@{classVal} {
				border-color: ~'@{btn-@{classVal}-border}';
				background-color: ~'@{btn-@{classVal}-bg}';
				.h(30px);
				.fz(13px);
				.p(0 15px 0 20px);

				.icon {
					.w(14px);
					.h(14px);
					.m(0 7px 0 -7px);
					.va(t);
				}
				&:hover {
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
				&:active {
					border-color: ~'@{btn-@{classVal}-border-active}';
					-webkit-box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
					box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
				}
				&:hover,
				&:active {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
				}
			}
		}
		// light colored backgrounds require a darker font-color
		& when (@classVal = cancel) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';

				color: ~'@{btn-@{classVal}-color}';
				&:hover {
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
				&:active {
					border-color: ~'@{btn-@{classVal}-border-active}';
					-webkit-box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
					box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
				}
				&:hover,
				&:active {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
				}
			}
		}
		// disabled buttons are... disabled!
		& when (@classVal = disabled) {
			&.@{classVal},
			&[@{classVal}] {
				background-color: ~'@{btn-@{classVal}-bg}' !important;
				border-color: ~'@{btn-@{classVal}-border}' !important;

				color: ~'@{btn-@{classVal}-color}' !important;
				&:hover {
					background-color: ~'@{btn-@{classVal}-bg}' !important;
					border-color: ~'@{btn-@{classVal}-border}' !important;
				}
			}
		}
		// change stuff for the primary buttons
		& when (@classVal = primary) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';
				.c(@color);

				&:hover {
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
				&:active {
					border-color: ~'@{btn-@{classVal}-border-active}';
					-webkit-box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
					box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
				}
				&:hover,
				&:active {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
				}
			}
		}
		// change stuff for the searchbar buttons
		& when (@classVal = search) {
			&.@{classVal} {
				background-color: ~'@{btn-@{classVal}-bg}';
				border-color: ~'@{btn-@{classVal}-border}';
				.c(@colorS1);
				.h(@searchbar-input-height);

				&:hover {
					border-color: ~'@{btn-@{classVal}-border-hover}';
				}
				&:active {
					// border: 1px solid #995609;
					// -webkit-box-shadow: #995609 0 3px 3px 0 inset;
					// box-shadow: #995609 0 3px 3px 0 inset;

					border-color: ~'@{btn-@{classVal}-border-active}';
					-webkit-box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
					box-shadow: ~'@{btn-@{classVal}-boxshadow-active}' 0 3px 3px 0 inset;
				}

				&:hover,
				&:active {
					background-color: ~'@{btn-@{classVal}-bg-hover}';
				}
			}
		}
		// light colored backgrounds require a darker font-color
		& when (@classVal = select) {
			.@{classVal} & {
				.select;
				&:hover {
					.bgc(#fff);
				}
			}
		}

		.loop(@arrayLength, (@index + 1));
	}
	.loop( length(@list) );

	// when you have an icon in a button
	.icon {
		.w(18px);
		.h(18px);
		.m(-5px 5px 0 -5px);
		.va(m);
		.bgsz(100%);
	}

	// overrides to the text buttons
	&-txt,
	&-txt-link {
		.bgc(@btn-bgcolor-txt);
		.bdc(@btn-bordercolor-txt);
		.p(0);
		.fz(1.3);

		&:hover,
		&.hover,
		&:active,
		&.active {
			.bgc(@btn-bgcolor-txt-hover);
			.bdc(@btn-bordercolor-txt-hover);
			text-decoration: underline;
			box-shadow: none;
		}
	}

	// overrides to the text buttons
	&-txt {
		.c(@btn-color-txt);

		& + & {
			.ml(15px);
		}
	}

	// overrides to the text buttons
	&-txt-link {
		.c(@btn-color-txt-link);

		& + & {
			.ml(15px);
		}
	}
}
